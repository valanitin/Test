<?php
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2021 Amasty (https://www.amasty.com)
 * @package Amasty_XmlSitemap
 */


namespace Amasty\XmlSitemap\Model\ResourceModel\Hreflang;

use Amasty\XmlSitemap\Model\Hreflang\GetBaseStoreUrlsInterface;
use Amasty\XmlSitemap\Model\Hreflang\GetUrlsInterface;
use Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator;

class GetCategoryUrls extends \Magento\Framework\Model\ResourceModel\Db\AbstractDb implements GetUrlsInterface
{
    /**
     * @var GetBaseStoreUrlsInterface
     */
    private $getBaseStoreUrls;

    public function __construct(
        \Magento\Framework\Model\ResourceModel\Db\Context $context,
        GetBaseStoreUrlsInterface $getBaseStoreUrls,
        $connectionName = null
    ) {
        parent::__construct($context, $connectionName);
        $this->getBaseStoreUrls = $getBaseStoreUrls;
    }

    /**
     * @return void
     */
    protected function _construct()
    {
        $this->_init('url_rewrite', 'entity_id');
    }

    /**
     * @inheritdoc
     */
    public function execute($storeIds, array $ids = null)
    {
        $select = $this->getConnection()->select()
            ->from(
                ['main_table' => $this->getMainTable()],
                ['id' => $this->getIdFieldName(), 'store_id', 'url' => 'request_path']
            )->where('store_id IN(?)', $storeIds)
            ->where('entity_type = ?', CategoryUrlRewriteGenerator::ENTITY_TYPE)
            ->where('is_autogenerated = 1');
        if (!empty($ids)) {
            $select->where($this->getIdFieldName() . 'entity_id IN (?)', $ids);
        }

        $storesBaseUrl = $this->getBaseStoreUrls->execute();
        $urls = array_map(
            function($row) use ($storesBaseUrl) {
                $row['url'] = $storesBaseUrl[$row['store_id']] . ltrim($row['url'], '/');
                return $row;
            },
            $this->getConnection()->fetchAll($select)
        );

        return $urls;
    }
}
